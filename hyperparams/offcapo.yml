atari:
  env_wrapper:
    - stable_baselines3.common.atari_wrappers.AtariWrapper
  frame_stack: 4
  policy: 'CnnPolicy'
  n_timesteps: !!float 1e7
  buffer_size: 100000
  learning_rate: !!float 1e-4
  batch_size: 32
  learning_starts: 100000
  target_update_interval: 1000
  train_freq: 4
  gradient_steps: 1
  exploration_fraction: 0.1
  exploration_final_eps: 0.01
  optimize_memory_usage: True

# Almost Tuned
CartPole-v1:
  n_timesteps: !!float 5e4
  policy: 'MlpPolicy'
  learning_rate: !!float 2.3e-3
  batch_size: 10
  buffer_size: 1000
  learning_starts: 100
  gamma: 0.99
  # target_update_interval: 10
  n_envs: 5
  train_freq: 20
  gradient_steps: 20
  exploration_fraction: 0.16
  exploration_final_eps: 0.04
  policy_kwargs: "dict(net_arch=[256, 256])"

MountainCar-v0:
  n_timesteps: !!float 1e5
  policy: 'MlpPolicy'
  learning_rate: !!float 4e-3
  batch_size: 10
  buffer_size: 1000
  learning_starts: 1000
  gamma: 0.99
  n_envs: 5
  policy_delay: 2
  alpha_coef: 0.8
  # target_update_interval: 600
  train_freq: 20
  gradient_steps: 50
  exploration_initial_eps: 0.5
  exploration_fraction: 0.2
  exploration_final_eps: 0.07
  vf_coef: 1
  policy_kwargs: "dict(net_arch=[512, 512])"
  policy_kwargs: "dict(optimizer_class=RMSpropTFLike, optimizer_kwargs=dict(eps=1e-5))"

# Tuned
LunarLander-v2:
  n_timesteps: !!float 1e6
  policy: 'MlpPolicy'
  learning_rate: !!float 6.3e-3
  batch_size: 40
  buffer_size: 50000
  learning_starts: 3000
  gamma: 0.99
  n_envs: 30
  policy_delay: 3
  vf_coef: 0.7
  alpha_coef: 0.5
  # target_update_interval: 250
  train_freq: 20
  gradient_steps: 100
  exploration_fraction: 0.3
  exploration_initial_eps: 0.5
  exploration_final_eps: 0.1
  policy_kwargs: "dict(net_arch=[256, 256])"

# Tuned
Acrobot-v1:
  n_timesteps: !!float 1e5
  policy: 'MlpPolicy'
  learning_rate: !!float 6.3e-4
  batch_size: 128
  buffer_size: 50000
  learning_starts: 0
  gamma: 0.99
  target_update_interval: 250
  train_freq: 4
  gradient_steps: -1
  exploration_fraction: 0.12
  exploration_final_eps: 0.1
  policy_kwargs: "dict(net_arch=[256, 256])"
